apiVersion: v1
kind: ConfigMap
metadata:
  name: load-csv-scripts
  namespace: {{ .Values.namespace }}
data:
  load_csv.py: |
    import os
    import pandas as pd
    from sqlalchemy import create_engine

    CUSTOMER_DATA = os.environ.get("CUSTOMER_DATA", "/data/customers.csv")
    POSTGRES_URL = os.environ.get(
        "POSTGRES_URL",
        "postgresql+asyncpg://iceberg:icebergpass@postgres-rw.data-lake.svc.cluster.local:5432/iceberg"
    )

    def main():
        if not os.path.exists(CUSTOMER_DATA):
            print(f"{CUSTOMER_DATA} not found. Exiting.")
            return
        try:
            df = pd.read_csv(CUSTOMER_DATA)
            engine = create_engine(POSTGRES_URL)
            df.to_sql("customers", engine, if_exists="replace", index=False)
            print(f"Loaded {len(df)} rows into PostgreSQL 'customers'.")
        except Exception as e:
            print("Error loading CSV to PostgreSQL:", e)

    if __name__ == "__main__":
        main()
