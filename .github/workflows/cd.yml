name: CD - Deploy to MicroK8s

on:
  workflow_dispatch:
    inputs:
      image_sha:
        description: 'Docker image SHA or tag to deploy (leave empty to use last built SHA)'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: [self-hosted, microk8s]

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. If no SHA given, fetch from last successful CI run
      - name: Download image-sha artifact
        if: ${{ github.event.inputs.image_sha == '' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yaml        # <-- must match your CI workflow filename
          workflow_conclusion: success
          name: image-sha
          path: ./artifact

      # 3. Resolve image tag
      - name: Set image
        run: |
          if [ -n "${{ github.event.inputs.image_sha }}" ]; then
            IMAGE_TAG="${{ github.event.inputs.image_sha }}"
          else
            IMAGE_TAG=$(cat ./artifact/image-sha.txt)
          fi

          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/telecom-customer-insights:$IMAGE_TAG
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "Using IMAGE: $IMAGE"

      # 4. Apply Kubernetes manifests
      - name: Deploy manifests
        run: |
          microk8s kubectl apply -k k8s/

      # 5. Update deployment image dynamically
      - name: Update deployment image
        run: |
          echo "Updating deployment with image: $IMAGE"
          microk8s kubectl -n telecom set image deployment/telecom-api telecom-api=$IMAGE
          microk8s kubectl -n telecom rollout status deployment/telecom-api --timeout=180s

      # 6. Ensure all pods use the new image
      - name: Restart pods to pick new image
        run: |
          microk8s kubectl -n telecom rollout restart deployment/telecom-api
          microk8s kubectl -n telecom rollout status deployment/telecom-api --timeout=180s

      # 7. Verify pod status and deployed image
      - name: Check pods and images
        run: |
          microk8s kubectl -n telecom get pods -o wide
          microk8s kubectl -n telecom get deployment telecom-api -o wide
          echo "Current images for all pods:"
          microk8s kubectl -n telecom get pods -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[*].image}{"\n"}{end}'
