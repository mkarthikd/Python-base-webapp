name: CD - Verify ArgoCD Deployment

on:
  workflow_dispatch:
    inputs:
      image_sha:
        description: "Docker image SHA or tag to verify (optional)"
        required: false
        default: ""

jobs:
  verify:
    runs-on: [self-hosted, microk8s]

    steps:
      # 1. Checkout repo (so you can read version or manifests if needed)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Resolve image tag (optional for manual verification)
      - name: Set image
        run: |
          if [ -n "${{ github.event.inputs.image_sha }}" ]; then
            IMAGE_TAG="${{ github.event.inputs.image_sha }}"
          else
            IMAGE_TAG="latest"
          fi
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/telecom-customer-insights:$IMAGE_TAG
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "Verifying deployment with expected image: $IMAGE"

      # 3. Wait for ArgoCD sync
      - name: Wait for ArgoCD sync
        run: |
          echo "Waiting for ArgoCD application 'telecom' to sync..."
          for i in {1..30}; do
            STATUS=$(microk8s kubectl -n argocd get application telecom -o jsonpath='{.status.sync.status}')
            HEALTH=$(microk8s kubectl -n argocd get application telecom -o jsonpath='{.status.health.status}')
            echo "Sync: $STATUS | Health: $HEALTH"
            if [ "$STATUS" = "Synced" ] && [ "$HEALTH" = "Healthy" ]; then
              echo "ArgoCD reports telecom is synced and healthy"
              exit 0
            fi
            sleep 10
          done
          echo "ArgoCD application did not sync/healthy in time"
          exit 1

      # 4. Verify pods and images in cluster
      - name: Check pods and images
        run: |
          echo "Checking deployed pods in 'telecom' namespace..."
          microk8s kubectl -n telecom get pods -o wide
          echo "Checking deployment details..."
          microk8s kubectl -n telecom get deployment telecom-api -o wide
          echo "Current images:"
          microk8s kubectl -n telecom get pods -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[*].image}{"\n"}{end}'
