name: CI - Build, Test, Scan, Push

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  IMAGE_NAME: telecom-customer-insights

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up Python 3.11
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      # 4. Run unit tests
      - name: Run unit tests
        run: PYTHONPATH=$PYTHONPATH:. pytest -q

      # 5. Generate synthetic data for CI
      - name: Generate synthetic data
        run: python app/data/generate_synthetic.py --rows 5000 --out app/data/customers.csv

      # 6. Docker Buildx setup
      - name: Docker setup Buildx
        uses: docker/setup-buildx-action@v3

      # 7. Docker login
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8. Build & push multi-arch Docker image
      - name: Build and push multi-arch image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
            --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest,mode=max \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      # 9. Snyk Python Scan
      - name: Setup Node.js & Snyk CLI
        uses: actions/setup-node@v3
        with:
          node-version: '24'
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Snyk Python Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --all-projects --severity-threshold=medium

      # 10. Snyk Container Scan
      - name: Snyk Container Scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          args: --file=Dockerfile --severity-threshold=medium

      # 11. Output image SHA for CD
      - name: Output image SHA
        run: |
          echo "IMAGE_SHA=${{ github.sha }}" >> $GITHUB_ENV
