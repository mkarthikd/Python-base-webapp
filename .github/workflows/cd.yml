name: CD - Deploy to MicroK8s

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy (default: latest)'
        required: false
        default: 'latest'

jobs:
  deploy:
    runs-on: [self-hosted, microk8s]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Apply manifests first (creates namespace, deployments, etc.)
      - name: Deploy manifests
        run: |
          microk8s kubectl apply -k k8s/

      # Remove old image to avoid architecture mismatch
      - name: Remove old image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/telecom-customer-insights:${{ github.event.inputs.image_tag }}
          microk8s ctr images rm $IMAGE || echo "No old image to remove"

      # Pull the latest multi-arch image
      - name: Pull latest image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/telecom-customer-insights:${{ github.event.inputs.image_tag }}
          microk8s ctr images pull $IMAGE

      # Update deployment to use new image
      - name: Update deployment image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/telecom-customer-insights:${{ github.event.inputs.image_tag }}
          microk8s kubectl -n telecom set image deployment/telecom-api telecom-api=$IMAGE
          microk8s kubectl -n telecom rollout status deployment/telecom-api --timeout=180s

      # Verify pod health
      - name: Check pod status
        run: |
          echo "Waiting 10s for pods to stabilize..."
          sleep 10
          microk8s kubectl -n telecom get pods -o wide
          microk8s kubectl -n telecom get deployment telecom-api -o wide
